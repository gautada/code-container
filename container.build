ARG ALPINE_VERSION="latest"

FROM gautada/alpine:$ALPINE_VERSION as build

RUN /sbin/apk add --no-cache build-base npm yarn python3 \
 && /usr/bin/yarn global add wetty \
 && /bin/tar -zcf /wetty.tgz /usr/local/share/.config /usr/local/bin/wetty 

FROM gautada/alpine:$ALPINE_VERSION as container
# ╭――――――――――――――――――――╮
# │ METADATA           │
# ╰――――――――――――――――――――╯
ARG USER="coder"
LABEL source="https://github.com/gautada/deven-container.git"
LABEL maintainer="Adam Gautier <adam@gautier.org>"
LABEL description="DEVelopment ENvironment (deven) container."

# ╭――――――――――――――――――――╮
# │ USER               │
# ╰――――――――――――――――――――╯
RUN /usr/sbin/usermod --login $USER --home /home/$USER --move-home busr
RUN /usr/sbin/groupmod --new-name $USER busr

# ╭――――――――――――――――――――╮
# │ PACKAGES           │
# ╰――――――――――――――――――――╯
# build-base yarn npm git openssh-client openssh tmux tpm neovim neovim-doc
# zsh nerd-fonts-all podman python3-pip
# RUN /sbin/apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing kubectl
# RUN echo "deb http://http.us.debian.org/debian/ testing non-free contrib main" >> /etc/apt/sources.list

RUN /sbin/apk add --no-cache nodejs \
 
 # ** OPEN SSH **
 && /sbin/apk add --no-cache openssh-server openssh-client \
 
 # ** TEXT EDITOR **
 && /sbin/apk add --no-cache build-base neovim neovim-doc \
 
 # ** CONTAINER MANAGER **
 && /sbin/apk add --no-cache fuse-overlayfs podman \
 # ** PYTHON PACKAGES **
 && /sbin/apk add --no-cache py3-pip \

 && /sbin/apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing kubectl

RUN /usr/sbin/usermod --add-subuids 100000-165535 $USER \
 && /usr/sbin/usermod --add-subgids 100000-165535 $USER \

 && /usr/bin/pip3 install podman-compose \

 && /bin/ln -fsv /mnt/volumes/container/Workspace /home/$USER/Workspace \
 && /bin/ln -fsv /mnt/volumes/container/Compose /home/$USER/Compose \
 && /bin/ln -fsv /mnt/volumes/container/Backup /home/$USER/Backup \
 && /bin/ln -fsv /mnt/volumes/container/Container /home/$USER/Container 

WORKDIR /
COPY --from=build /wetty.tgz /wetty.tgz
RUN /bin/tar -zxf /wetty.tgz \
 && /bin/rm -f /wetty.tgz

# ╭――――――――――――――――――――╮
# │ STANDARD CONFIG    │
# ╰――――――――――――――――――――╯
# COPY backup /etc/container/backup
COPY deven.health /etc/container/health.d/deven.health
COPY entrypoint /etc/container/entrypoint
COPY privileges /etc/container/privileges

# ╭――――――――――――――――――――╮
# │ CONTAINER          │
# ╰――――――――――――――――――――╯
USER $USER
WORKDIR /home/$USER
 
RUN /bin/mkdir -p /tmp/podman-run-1001/podman \
 # && /bin/touch /tmp/podman-run-1001/podman/podman.sock \
 && /usr/bin/podman system connection add sock unix:///tmp/podman-run-1001/podman/podman.sock \
 &&  /usr/bin/podman system connection default sock \

 && /bin/rm -rf /home/$USER/.zshrc

# ╭――――――――――――――――――――╮
# │FINAL CONTAIner     │
# ╰――――――――――――――――――――╯
FROM scratch
COPY --from=container / /
ENTRYPOINT ["/usr/bin/container-entrypoint"]
VOLUME /mnt/volumes/backup
VOLUME /mnt/volumes/configmaps
VOLUME /mnt/volumes/container
VOLUME /mnt/volumes/secrets/namespace
VOLUME /mnt/volumes/secrets/container
EXPOSE 8080/tcp
EXPOSE 8888/tcp
USER coder
WORKDIR /home/coder
